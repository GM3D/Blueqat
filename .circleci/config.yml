# vim: set sw=2 :
version: 2.1
executors:
    python:
      parameters:
        tag:
          type: string
      working_directory: ~/repo<< parameters.tag >>
      docker:
          - image: circleci/python:<< parameters.tag >>

    miniconda:
      parameters:
        tag:
          type: string
      working_directory: ~/miniconda3-<< parameters.tag >>
      docker:
        - image: continuumio/miniconda3:4.9.2


commands:
  install_for_doctest:
    parameters:
      tag:
        type: string

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-<<parameters.tag>>-{{ checksum "requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install --progress-bar off -U pip setuptools
            pip install --progress-bar off pytest twine wheel
            pip install --progress-bar off -r requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-<<parameters.tag>>-{{ checksum "requirements.txt" }}

  install:
    parameters:
      tag:
        type: string

      qgate_url:
        type: string
        default: ""

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-conda-<<parameters.tag>>-{{ checksum "requirements.txt" }}-{{ checksum "optional-requirements.txt" }}

      - run:
          name: Install dependencies
          command: |
            conda init bash
            . ~/.bashrc
            conda create -qy --name py<<parameters.tag>> python=<<parameters.tag>>
            conda activate py<<parameters.tag>>
            conda install -qy numpy scipy numba pytest twine wheel setuptools
            pip install --progress-bar off -r requirements.txt
            pip install --progress-bar off -r optional-requirements.txt

      - when:
          condition: << parameters.qgate_url >>
          steps:
            - run:
                name: Install qgate
                command: |
                  conda init bash
                  . ~/.bashrc
                  conda activate py<<parameters.tag>>
                  pip install << parameters.qgate_url >>

      - save_cache:
          paths:
            - /opt/conda/envs/py<<parameters.tag>>
          key: v1-conda-<<parameters.tag>>-{{ checksum "requirements.txt" }}-{{ checksum "optional-requirements.txt" }}

jobs:
  doccheck:
    executor:
      name: python
      tag: "3.7.8"

    steps:
      - install_for_doctest:
          tag: "3.7.8"

      - run:
          name: twine check
          command: |
            . venv/bin/activate
            python setup.py build sdist bdist_wheel

  test_main:
    parameters:
      tag:
        type: string

      test_option:
        type: string
        default: "--add-backend qgate --add-backend numba"

      qgate_url:
        type: string
        default: ""

    executor:
      name: miniconda
      tag: <<parameters.tag>>

    steps:
      - install:
          tag: <<parameters.tag>>
          qgate_url: <<parameters.qgate_url>>

      - run:
          name: create a result directory
          command: mkdir -p test-reports/python

      - run:
          name: run tests
          command: |
            conda init bash
            . ~/.bashrc
            conda activate py<<parameters.tag>>
            python -m pytest tests/ -v --junitxml=test-reports/python/junit.xml <<parameters.test_option>>

      - store_test_results:
          path: test-reports

      - store_artifacts:
          path: test-reports
          destination: test-reports

workflows:
  version: 2
  check_all:
    jobs:
      - doccheck
      - test_main:
          name: py3.7-qgate-0.2.2
          tag: "3.7.9"
          qgate_url: https://github.com/shinmorino/qgate/raw/gh-pages/packages/0.2/qgate-0.2.2-cp37-cp37m-manylinux1_x86_64.whl

      - test_main:
          name: py3.8-qgate-0.2.2
          tag: "3.8.8"
          qgate_url: https://github.com/shinmorino/qgate/raw/gh-pages/packages/0.2/qgate-0.2.2-cp38-cp38-manylinux1_x86_64.whl

      - test_main:
          name: py3.9
          tag: "3.9.0"
          test_option: "--add-backend numba"
